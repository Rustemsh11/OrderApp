@model IEnumerable<OrderApp.Shared.OrderViewModel>


    <style>
        .idOrder{
            visibility: hidden
        }
    </style>


    <h1>Заказы</h1>

    <form class="createOrder" action="Home/CreateOrder">
        <input type="submit" class="createButton" value="Создать заказ" />
    </form>

    <form id="filter-form">
        <label for="from-date">От:</label>
        <input type="date" id="from-date" name="fromDate" value="@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")">
        <label for="to-date">До:</label>
        <input type="date" id="to-date" name="toDate" value="@DateTime.Now.ToString("yyyy-MM-dd")">
        <input type="submit" class="filter" value="Фильтр">
    </form>
    
    <div class="row">
        <div class="col">
            <label>Фильтрация по полям</label>
            <select id="ddList" asp-items="@ViewBag.Fields" class="form-select" aria-label="Default select example">
                <option selected>Выберите категорию</option>
            </select>
        </div>
        <div class="col">
            <br/>
            <input type="text" class="filterValue" />
            <input type="submit" class="filterByFields"  value="Фильтр" />
        </div>
    </div>
   

    <table id="orders-table">
        <thead>
            <tr>
                <th></th>
                <th>Номер заказа</th>
                <th>Дата заказа</th>
                <th>Поставщик</th>
            </tr>
        </thead>
        <tbody id="partial">
            @await Html.PartialAsync("TableOrdersView", Model)
        </tbody>
    </table>

    <script>
        const filterForm = document.getElementById('filter-form');
        const ordersTable = document.getElementById('orders-table');
        let fromDateInput = document.getElementById('from-date');
        let toDateInput = document.getElementById('to-date');
        const createButton = document.querySelector('.createOrder');
        const table = document.querySelector('#orders-table');
        const rows = table.getElementsByTagName('tr');
        const fiterButton = document.querySelector('.filterByFields');
        const filterValue = document.querySelector('.filterValue');
        const ddList = document.getElementById('ddList');
        var partial = document.querySelector('#partial');


        function setGetOrderItemsEvent(){
            Array.from(rows).forEach((row, index)=>{
            row.addEventListener('dblclick', (event)=>{
                event.preventDefault();
                const cell = row.getElementsByTagName('td');
                const ID = parseInt(cell[0].innerHTML);
                //fetch(`/Home/GetOrderDetails?id=${id}`, {method: 'get'})
                window.location.href = '@Url.Action("GetOrderDetails", "QueryDetails")?id=' + ID
                //var xhttp = new XMLHttpRequest();
                //xhttp.open("GET", `/Home/GetOrderDetails?id=${ID}`, true);
                //xhttp.send();
            });
        })
        }


        setGetOrderItemsEvent();
        fiterButton.addEventListener('click',(e)=>{
            e.preventDefault();

            $.ajax({
                url: '@Url.Action("Filter","Home")',
                type: 'GET',
                data: { filedId: ddList.value, value: filterValue.value },
                success: function (result) {
                    $("#partial").html(result);
                    setGetOrderItemsEvent();
                }
            });
       
            //With XMLHttpRequest

            //let xhr = new XMLHttpRequest();
            //xhr.open('GET', `/Home/Filter?filedId=${ddList.value}&value=${filterValue.value}`);
            //xhr.send();
            //xhr.onload = function(){
            //    if(xhr.status == 200){
            //        var partial = document.querySelector('#partial');
            //        partial.outerHTML=xhr.response;
            //    }
            //}
        });

    var filterDataEvetn =  function (event) {
            event.preventDefault();

            const fromDate = new Date(fromDateInput.value);
            const toDate = new Date(toDateInput.value);

            const tbody = ordersTable.querySelector('tbody');
            const rows = tbody.querySelectorAll('tr');

            rows.forEach(function (row) {
                const orderDate = new Date(row.cells[2].textContent);

                if (orderDate >= fromDate && orderDate <= toDate) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
    
    filterForm.addEventListener('submit', filterDataEvetn);
  
</script>